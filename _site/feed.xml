<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-06-15T16:58:57+08:00</updated><id>http://localhost:4000/</id><title type="html">Pickcle’s Blog</title><subtitle>Pickcle's Blog
</subtitle><entry><title type="html">尤雨溪知乎live摘要</title><link href="http://localhost:4000/live/2017/06/15/%E5%B0%A4%E9%9B%A8%E6%BA%AA%E7%9F%A5%E4%B9%8Elive%E6%91%98%E8%A6%81.html" rel="alternate" type="text/html" title="尤雨溪知乎live摘要" /><published>2017-06-15T14:59:24+08:00</published><updated>2017-06-15T14:59:24+08:00</updated><id>http://localhost:4000/live/2017/06/15/%E5%B0%A4%E9%9B%A8%E6%BA%AA%E7%9F%A5%E4%B9%8Elive%E6%91%98%E8%A6%81</id><content type="html" xml:base="http://localhost:4000/live/2017/06/15/%E5%B0%A4%E9%9B%A8%E6%BA%AA%E7%9F%A5%E4%B9%8Elive%E6%91%98%E8%A6%81.html">&lt;p&gt;尤雨溪live&lt;/p&gt;

&lt;p&gt;组件：基本抽象单元，页面-&amp;gt;组件树，react揭示了组件可以是函数，&lt;/p&gt;

&lt;p&gt;1.纯展示 component&lt;/p&gt;

&lt;p&gt;2.接入型 container&lt;/p&gt;

&lt;p&gt;3.交互型 交互性强，复用&lt;/p&gt;

&lt;p&gt;4.功能型 router-view transition&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
模板 vs jsx&lt;/p&gt;

&lt;p&gt;jsx其实是js语法糖，获得了js的灵活性&lt;/p&gt;

&lt;p&gt;模板尽可能的少逻辑，更清晰地展示视图&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
变化侦测&amp;amp;渲染机制&lt;/p&gt;

&lt;p&gt;声明式 描述数据跟dom的关系 view = render(state)&lt;/p&gt;

&lt;p&gt;命令式 jquery 维护困难&lt;/p&gt;

&lt;p&gt;pull：粗粒度，react的setState，告诉系统去进行暴力检查&lt;/p&gt;

&lt;p&gt;push：&lt;/p&gt;

&lt;p&gt;observe：细粒度，watcher和observer会很多，内存开销&lt;/p&gt;

&lt;p&gt;shouldComponentUpdate，pureComponent是为了提高精度&lt;/p&gt;

&lt;p&gt;vue2中等粒度，组件级别是push&lt;/p&gt;

&lt;p&gt;侦测成本换自动优化&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
状态管理：从源事件映射到状态改变&lt;/p&gt;

&lt;p&gt;redux： 数据不可变，immutable&lt;/p&gt;

&lt;p&gt;mobx&amp;amp;vuex：数据可变，声明式，解决watch带来的副作用&lt;/p&gt;

&lt;p&gt;都没解决异步&lt;/p&gt;

&lt;p&gt;局部和全局状态无法区别&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
路由&lt;/p&gt;

&lt;p&gt;component-is&lt;/p&gt;

&lt;p&gt;hash模式兼容history模式&lt;/p&gt;

&lt;p&gt;重定向&lt;/p&gt;

&lt;p&gt;别名&lt;/p&gt;

&lt;p&gt;懒加载&lt;/p&gt;

&lt;p&gt;跳转，钩子，异步操作，回退&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
CSS&lt;/p&gt;

&lt;p&gt;scope，css module解决作用域问题&lt;/p&gt;

&lt;p&gt;atomic css 压缩css体积，尽量原子化，styletron&lt;/p&gt;

&lt;p&gt;weex 将css parse成js，实现跨平台&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
构建工具&lt;/p&gt;

&lt;p&gt;任务自动化&lt;/p&gt;

&lt;p&gt;开发体验和效率hot reload&lt;/p&gt;

&lt;p&gt;部署相关的需求&lt;/p&gt;

&lt;p&gt;编译时优化&lt;/p&gt;

&lt;p&gt;rollup只适合打包纯js&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
服务端数据通信&lt;/p&gt;

&lt;p&gt;RESTFUL API&lt;/p&gt;

&lt;p&gt;不适合 强关联性 实时通信&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
跨平台渲染&lt;/p&gt;

&lt;p&gt;将细粒度的变化转为相应平台的API&lt;/p&gt;</content><author><name></name></author><summary type="html">尤雨溪live</summary></entry><entry><title type="html">Vue从零开始记录</title><link href="http://localhost:4000/vue/2017/05/28/Vue%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E8%AE%B0%E5%BD%95.html" rel="alternate" type="text/html" title="Vue从零开始记录" /><published>2017-05-28T14:59:24+08:00</published><updated>2017-05-28T14:59:24+08:00</updated><id>http://localhost:4000/vue/2017/05/28/Vue%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E8%AE%B0%E5%BD%95</id><content type="html" xml:base="http://localhost:4000/vue/2017/05/28/Vue%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E8%AE%B0%E5%BD%95.html">&lt;p&gt;Vue warn: You are using the runtime-only build of Vue where the template compiler is not available. Either pre-compile the templates into render functions, or use the compiler-included build.&lt;/p&gt;

&lt;p&gt;解决方案：&lt;/p&gt;

&lt;p&gt;node_modules中vue的package.json中可以看到，真正导出的是main指向的vue.runtime.common.js，所以如果直接import vue from ‘vue’的话，引用的是vue.runtime.common.js，而vue其实是rumtime+compile两部分组成的，所以我们需要在webpack中设置个vue的别名，alias中添加一行’vue’: ‘vue/dist/vue.js’，然后项目中正常使用就可以了
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
Vue warn: Error compiling template:&lt;/p&gt;

&lt;div id=&quot;app&quot;&gt;
  &lt;script type=&quot;text/javascript&quot; src=&quot;app-46fdf745b7df8bcb9dd2.js&quot;&gt;&lt;/script&gt;&lt;/div&gt;

&lt;p&gt;Templates should only be responsible for mapping the state to the UI. Avoid placing tags with side-effects in your templates, such as &lt;script&gt;, as they will not be parsed.&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;解决方案：&lt;/p&gt;

&lt;p&gt;使用html-webpack-plugin时，指定template对应的模板html中，不能有&amp;lt;div /&amp;gt;这样的写法，必须是&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;这样的标准写法，否则会报错
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
webpack HMR(hot module replacement) 如何对html-webpack-plugin生效？&lt;/p&gt;

&lt;p&gt;解决方案：&lt;/p&gt;

&lt;p&gt;step.1&lt;/p&gt;

&lt;p&gt;server文件中添加&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;compiler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wepback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wepbackConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webpackHotMiddleware&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'webpack-hot-middleware'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hotMiddleware&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webpackHotMiddleware&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compiler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;log: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;compiler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;plugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'compilation'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compilation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;compilation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;plugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'html-webpack-plugin-after-emit'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;hotMiddleware&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;publish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;action: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'reload'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;当webpack重新打包html时，会派送个自定义的reload事件&lt;/p&gt;

&lt;p&gt;step.2&lt;/p&gt;

&lt;p&gt;新建文件hotMiddlewareClient.js&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hotMiddlewareClient&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'webpack-hot-middleware/client?noInfo=true&amp;amp;reload=true'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;hotMiddlewareClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'reload'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;接收reload事件，强制浏览器reload&lt;/p&gt;

&lt;p&gt;step.3&lt;/p&gt;

&lt;p&gt;在webpack.config.js中配置&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;ss&quot;&gt;entry: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;app: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'./hotMiddlewareClient'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SRC_PATH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'index.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><summary type="html">Vue warn: You are using the runtime-only build of Vue where the template compiler is not available. Either pre-compile the templates into render functions, or use the compiler-included build.</summary></entry><entry><title type="html">Vue warn: You are using the runtime-only build of Vue</title><link href="http://localhost:4000/vue/2017/05/28/Vue-runtime-only-build.html" rel="alternate" type="text/html" title="Vue warn: You are using the runtime-only build of Vue" /><published>2017-05-28T14:59:24+08:00</published><updated>2017-05-28T14:59:24+08:00</updated><id>http://localhost:4000/vue/2017/05/28/Vue-runtime-only-build</id><content type="html" xml:base="http://localhost:4000/vue/2017/05/28/Vue-runtime-only-build.html">&lt;p&gt;Vue warn: You are using the runtime-only build of Vue where the template compiler is not available. Either pre-compile the templates into render functions, or use the compiler-included build.&lt;/p&gt;

&lt;p&gt;解决方案：&lt;/p&gt;

&lt;p&gt;node_modules中vue的package.json中可以看到，真正导出的是main指向的vue.runtime.common.js，所以如果直接import vue from ‘vue’的话，引用的是vue.runtime.common.js，而vue其实是rumtime+compile两部分组成的，所以我们需要在webpack中设置个vue的别名，alias中添加一行’vue’: ‘vue/dist/vue.js’，然后项目中正常使用就可以了&lt;/p&gt;</content><author><name></name></author><summary type="html">Vue warn: You are using the runtime-only build of Vue where the template compiler is not available. Either pre-compile the templates into render functions, or use the compiler-included build.</summary></entry><entry><title type="html">webpack打包报错TypeError: $export is not a function</title><link href="http://localhost:4000/webpack/babel/2017/05/28/webpack%E6%89%93%E5%8C%85%E6%8A%A5%E9%94%99TypeError-$export-is-not-a-function.html" rel="alternate" type="text/html" title="webpack打包报错TypeError: $export is not a function" /><published>2017-05-28T14:59:24+08:00</published><updated>2017-05-28T14:59:24+08:00</updated><id>http://localhost:4000/webpack/babel/2017/05/28/webpack%E6%89%93%E5%8C%85%E6%8A%A5%E9%94%99TypeError:%20$export-is-not-a-function</id><content type="html" xml:base="http://localhost:4000/webpack/babel/2017/05/28/webpack%E6%89%93%E5%8C%85%E6%8A%A5%E9%94%99TypeError-$export-is-not-a-function.html">&lt;p&gt;webpack打包时报错TypeError: $export is not a function&lt;/p&gt;

&lt;p&gt;解决方案：&lt;/p&gt;

&lt;p&gt;webpack.config.js中,loaders中的babel-loader需要加一行exclude: /node_modules/&lt;/p&gt;</content><author><name></name></author><summary type="html">webpack打包时报错TypeError: $export is not a function</summary></entry><entry><title type="html">atom安装插件失败解决方案</title><link href="http://localhost:4000/atom/packages/2017/05/12/atom%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html" rel="alternate" type="text/html" title="atom安装插件失败解决方案" /><published>2017-05-12T14:59:24+08:00</published><updated>2017-05-12T14:59:24+08:00</updated><id>http://localhost:4000/atom/packages/2017/05/12/atom%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88</id><content type="html" xml:base="http://localhost:4000/atom/packages/2017/05/12/atom%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html">&lt;p&gt;在windows系统中打开atom，安装package失败，错误码404&lt;/p&gt;

&lt;p&gt;解决方案：&lt;/p&gt;

&lt;p&gt;1.&lt;a href=&quot;https://atom.io/packages&quot;&gt;https://atom.io/packages&lt;/a&gt;，找到插件的github地址&lt;/p&gt;

&lt;p&gt;2.进入atom的包管理目录，~/.atom/packages，git clone插件&lt;/p&gt;

&lt;p&gt;3.进入插件目录，npm install&lt;/p&gt;</content><author><name></name></author><summary type="html">在windows系统中打开atom，安装package失败，错误码404</summary></entry><entry><title type="html">Operation not permitted解决方法</title><link href="http://localhost:4000/jekyll/osx/2017/04/13/Operation-not-permitted%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.html" rel="alternate" type="text/html" title="Operation not permitted解决方法" /><published>2017-04-13T15:20:24+08:00</published><updated>2017-04-13T15:20:24+08:00</updated><id>http://localhost:4000/jekyll/osx/2017/04/13/Operation-not-permitted%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95</id><content type="html" xml:base="http://localhost:4000/jekyll/osx/2017/04/13/Operation-not-permitted%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.html">&lt;p&gt;使用sudo gem install jekyll bundler安装jekyll时发生错误:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;ERROR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;While&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;executing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Errno&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;EPERM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Operation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permitted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/usr/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;解决方法:&lt;/p&gt;

&lt;p&gt;sudo gem install -n /usr/local/bin/ jekyll&lt;/p&gt;

&lt;p&gt;默认安装目录是/usr/bin，将安装目录改成/usr/local/bin，可以绕过SIP检测&lt;/p&gt;

&lt;p&gt;参考链接: &lt;a href=&quot;http://stackoverflow.com/questions/31567029/how-can-i-install-jekyll-on-osx-10-11&quot;&gt;http://stackoverflow.com/questions/31567029/how-can-i-install-jekyll-on-osx-10-11&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">使用sudo gem install jekyll bundler安装jekyll时发生错误:</summary></entry><entry><title type="html">Oh My Zsh翻墙方案</title><link href="http://localhost:4000/ohmyzsh/%E7%BF%BB%E5%A2%99/2017/04/13/Oh-My-Zsh%E7%BF%BB%E5%A2%99%E6%96%B9%E6%A1%88.html" rel="alternate" type="text/html" title="Oh My Zsh翻墙方案" /><published>2017-04-13T15:10:24+08:00</published><updated>2017-04-13T15:10:24+08:00</updated><id>http://localhost:4000/ohmyzsh/%E7%BF%BB%E5%A2%99/2017/04/13/Oh-My-Zsh%E7%BF%BB%E5%A2%99%E6%96%B9%E6%A1%88</id><content type="html" xml:base="http://localhost:4000/ohmyzsh/%E7%BF%BB%E5%A2%99/2017/04/13/Oh-My-Zsh%E7%BF%BB%E5%A2%99%E6%96%B9%E6%A1%88.html">&lt;p&gt;1.终端输入vim ~/.zshrc，查看Oh My Zsh的配置文件&lt;/p&gt;

&lt;p&gt;2.添加以下内容:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# socks5代理&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setproxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;export all_proxy=socks5://127.0.0.1:1080&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unsetproxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;unset all_proxy&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;3.保存退出vim，重启终端&lt;/p&gt;

&lt;p&gt;4.输入setproxy命令，启用socks5代理进行翻墙&lt;/p&gt;</content><author><name></name></author><summary type="html">1.终端输入vim ~/.zshrc，查看Oh My Zsh的配置文件</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2017/04/13/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2017-04-13T14:59:24+08:00</published><updated>2017-04-13T14:59:24+08:00</updated><id>http://localhost:4000/jekyll/update/2017/04/13/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2017/04/13/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">jekyll安装过程</title><link href="http://localhost:4000/jekyll/install/2017/04/13/jekyll%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B.html" rel="alternate" type="text/html" title="jekyll安装过程" /><published>2017-04-13T14:59:24+08:00</published><updated>2017-04-13T14:59:24+08:00</updated><id>http://localhost:4000/jekyll/install/2017/04/13/jekyll%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B</id><content type="html" xml:base="http://localhost:4000/jekyll/install/2017/04/13/jekyll%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B.html">&lt;p&gt;Mac OS X El Capitan系统下安装jekyll：&lt;/p&gt;

&lt;p&gt;1.sudo gem update –system(需要翻墙)&lt;/p&gt;

&lt;p&gt;更新gem&lt;/p&gt;

&lt;p&gt;oh my zsh翻墙：&lt;a href=&quot;https://pickcle.github.io/ohmyzsh/%E7%BF%BB%E5%A2%99/2017/04/13/Oh-My-Zsh%E7%BF%BB%E5%A2%99%E6%96%B9%E6%A1%88.html&quot;&gt;Oh My Zsh翻墙方法&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2.sudo gem install jekyll bundler&lt;/p&gt;

&lt;p&gt;安装jekyll bundler&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pickcle.github.io/jekyll/osx/2017/04/13/Operation-not-permitted%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.html&quot;&gt;Operation not permitted解决方法&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.jekyll new blog&lt;/p&gt;

&lt;p&gt;在blog文件夹下创建一个新的jekyll项目&lt;/p&gt;

&lt;p&gt;如果是导入了就项目，也必须走一遍这个过程，因为在新建项目时，会安装一堆gem库，如果不走这步，会有各种cannot find sass之类的报错&lt;/p&gt;

&lt;p&gt;4.cd blog&lt;/p&gt;

&lt;p&gt;5.bundle exec jekyll serve&lt;/p&gt;

&lt;p&gt;启动jekyll服务&lt;/p&gt;

&lt;p&gt;6.在浏览器打开http://localhost:4000&lt;/p&gt;

&lt;p&gt;参考链接: &lt;a href=&quot;https://jekyllrb.com/docs/quickstart/&quot;&gt;https://jekyllrb.com/docs/quickstart/&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Mac OS X El Capitan系统下安装jekyll：</summary></entry></feed>